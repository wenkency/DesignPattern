// 如果是依赖
if (isModule) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

// 声明及引用
def app = rootProject.ext.app
def appId = rootProject.ext.appId
android {
    compileSdkVersion app.compileSdkVersion

    defaultConfig {
        minSdkVersion app.minSdkVersion
        targetSdkVersion app.targetSdkVersion
        versionCode app.versionCode
        versionName app.versionName
        // 如果是组件
        if (!isModule) {
            applicationId appId['moudle']
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        // 是注解编译用
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }


        sourceSets {
            main {
                // 组件下的清单配置
                if (!isModule) {
                    manifest.srcFile 'src/main/debug/AndroidManifest.xml'
                    /*配置打包源码目录*/
                    java.srcDirs("src/main/java", "src/main/debug/java")
                } else {
                    manifest.srcFile 'src/main/AndroidManifest.xml'
                    // 移出debug下无用的资源
                    java {
                        exclude 'debug/**'
                    }
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(path: ':lib-base')
}
